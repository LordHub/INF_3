fmod BATTERY-EXT is
	protecting BATTERY-MAUDE .
	protecting BOOL .
	protecting NAT .

	op charge : Battery -> Nat .

	var EBt : EBattery .
	var Bt : Battery .

	eq charge(EBt) = 0 .
	eq charge(EBt ^ o ^ Bt) = 100 + charge(Bt) .
	eq charge(EBt ^ + ^ Bt) = 50 + charge(Bt) .
endfm

fmod BATTERY-MAUDE is
	sorts Cell ECell Battery EBattery .
	subsorts ECell < Cell < Battery .
	subsorts ECell < EBattery < Battery .

	op o : -> Cell  .
	op + : -> Cell  .
	op - : -> ECell  .
	op nil : -> EBattery  .
	op _^_ : EBattery EBattery -> EBattery [assoc id: nil] .
	op _^_ : Battery Battery -> Battery [assoc id: nil] .
	op consume : Battery -> Battery .

	var Bt : Battery . var EBt : EBattery .

	eq consume(EBt ^ o ^ Bt) = EBt ^ + ^ Bt .
	eq consume(EBt ^ + ^ Bt) = EBt ^ - ^ Bt .
	eq consume(Bt) = Bt [owise] .
endfm

fmod BATTERY-ALL 
