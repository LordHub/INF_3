#EJERCICIO 34 PELICULAS
SELECT A.cod_act, A.nombre
FROM CS_Actor A, CS_Actua C
WHERE A.cod_act = C.cod_act and C.cod_peli in (SELECT P.cod_peli
                                  FROM cs_pelicula P 
                                  WHERE c.cod_peli = P.cod_peli 
                                  and P.director LIKE '%Guy Ritchie%')
GROUP BY A.cod_act, A.nombre;

#EJERCICIO 35 PELICULAS
SELECT A.cod_act, A.nombre
FROM CS_Actor A, CS_Actua C
WHERE A.cod_act = C.cod_act and C.cod_peli in (SELECT P.cod_peli
                                  FROM cs_pelicula P 
                                  WHERE c.cod_peli = P.cod_peli 
                                  and P.director LIKE '%John Steel%')
GROUP BY A.cod_act, A.nombre;

#EJERCICIO 36 PELICULAS da una pelicula más que la solución
SELECT P.cod_peli, P.titulo
FROM cs_pelicula P, cs_actua C
WHERE P.cod_peli=C.cod_peli and p.duracion < 100 and C.COD_ACT in (select A.COD_ACT 
                                                                  from cs_Actor A, cs_pais S
                                                                  where A.cod_pais=S.cod_pais)
group by p.cod_peli, p.titulo
order by p.cod_peli;

--Da muchas mas EJERCICIO 37
SELECT P.cod_peli, P.titulo, P.anyo
FROM cs_pelicula P, cs_actua C
WHERE P.cod_peli=C.cod_peli and C.COD_ACT in (select A.COD_ACT 
                                              from cs_Actor A
                                              where extract (year from A.FECHA_NAC) <1944)
group by p.cod_peli, p.titulo, p.anyo
order by p.cod_peli;


#EJERCICIO 39 PELICULAS
SELECT L.cod_lib , L.titulo, COUNT(P.COD_PELI)
FROM cs_pelicula P, cs_libro L
WHERE P.cod_lib= L.cod_lib
GROUP BY L.cod_lib, L.titulo
HAVING COUNT(P.COD_PELI) >= 2;

#codigo y libro cuyos libros han sido usados en dos o más peliculas
#if we want to select a row we need to add it in the group by too

#EJERCICIO 40 PELICULAS  Write a query for the previous problem but using the director named ‘John Steel’.
SELECT G.cod_gen , G.nombre, COUNT(P.COD_PELI), round(avg(P.duracion))
FROM cs_genero G , cs_clasificacion C, cs_pelicula P 
WHERE G.cod_gen = C.cod_gen and C.cod_peli = P.cod_peli
GROUP BY G.cod_gen,G.nombre 
HAVING COUNT(P.cod_peli) > 5
ORDER BY G.nombre;

#EJERCICIO 41 List the code and tittle of the movies released after the 2000 year, and their genre (if they have genre) (sorted by title).
SELECT P.cod_peli , P.titulo, count(distinct(c.cod_gen))
FROM cs_genero G , cs_clasificacion C, cs_pelicula P 
where P.anyo > 2000 and P.cod_peli = C.cod_peli
having count(C.cod_gen) > 0
GROUP BY P.cod_peli , P.titulo
ORDER BY p.titulo;

#EJERCICIO 42 List the directors who have directed two (exactly 2) movies whose name contains the string ‘George’.
SELECT P.director
FROM cs_pelicula P 
where P.director like '%George%' 
GROUP BY P.director
HAVING COUNT(P.cod_peli) = 2 
ORDER BY P.director;

#EJERCICIO 43 List for each movie with some actor and classified in one (and only one) genre, the code, tittle and
# amount of actors who have acted in that movie.
SELECT 

--EJERCICIO 46 to finish
select L.COD_LIB, L.TITULO, L.AUTOR
from cs_libro L, CS_PELICULA P
where L.cod_lib = P.cod_lib and P.cod_lib in (select max (count (P2.cod_libro)) 
                                              from cs_pelicula P2
                                          )
group by L.cod_lib, L.titulo , L.autor
order by L.TITULO;

select P.cod_lib from cs_pelicula P, cs_libro L 
WHERE P.COD_LIB = L.COD_LIB and P.cod_lib in (SELECT P.cod FROM cs_pelicula R 
WHERE);


--EJERCICIO 47 to finish 
SELECT P.cod_pais, P.nombre
FROM cs_pais P, cs_actor A
WHERE P.COD_PAIS = A.COD_PAIS and 2 = (select count(C.cod_act)
                                                from  cs_actua C, cs_pelicula P 
                                                WHERE C.cod_peli = P.cod_peli)
GROUP BY P.COD_PAIS,P.nombre;


--EJERCICIO 47 TEACHER WHITEBOARD
SELECT P.cod_pais, P.nombre
FROM BDA.CS_PAIS P, BDA.CS_ACTOR A
WHERE P.COD_PAIS = A.COD_PAIS 
and 2 = (SELECT count (*)
        FROM cs_actua AC 
        WHERE AC.COD_ACT = A.cod_act)
GROUP BY P.cod_pais, P.nombre
HAVING COUNT (*) = (SELECT max (COUNT (*))
                  FROM cs_actor A2 
                  WHERE 2 = (SELECT COUNT (*)
                            FROM CS_actua AC2
                            WHERE A2.cod_act = AC2.cod_act)
                  GROUP BY A2.cod_pais
                          )

--EJERCICIO 48
SELECT count(extract (year from A.fecha_nac)), extract (year from A.fecha_nac) 
FROM cs_actor A
WHERE 3 <= ( select count(*)
            from cs_actor C
            where extract (year from C.fecha_nac) = extract (year from A.fecha_nac)
          ) group by extract (year from A.fecha_nac) having count (*)= (
                                                      select max (count (*))
                                                      FROM cs_actor D
                                                      group by extract (year from D.fecha_nac) );
                                                      
--50.List for all the countries in the database, the code, name, and amount of actors in each country. 
SELECT distinct P.NOMBRE, P.COD_PAIS, count(A.COD_PAIS)
FROM cs_pais P 
LEFT JOIN cs_actor A
ON P.COD_PAIS = A.COD_PAIS 
group by P.cod_pais, P.nombre , A.cod_Pais
order by P.nombre; 
